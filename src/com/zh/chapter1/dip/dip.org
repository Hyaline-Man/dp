#+TITLE: 依赖倒置原则(Dependence Inversion Principle)
** 定义：
1. 高层模块不应该依赖底层模块，两者都应该依赖其抽象；
2. 抽象不应该依赖细节；
3. 细节应该依赖抽象。
*** java中的体现：面向接口编程
1. 模块见的依赖通过抽象发生，实现累之间不发生直接的依赖关系，其依赖关系是通过接口或抽象类产生的;
2. 接口或抽象类不依赖与实现累;
3. 实现类依赖接口或抽象。
** 优点
  采用依赖倒置原则可以减少类间的耦合性，提高系统的稳定性，降低并行开发引起的风险，提高代码的可读性和可维护性。
** 依赖的三种写法，看例子。。
1. 构造函数传递依赖对象，就是构造函数注入
2. Setter方法传递依赖对象，就是setter方法注入
3. 接口声明依赖对象，就是接口注入    :这个有点难理解，不确定对不对。。
