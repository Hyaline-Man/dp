#+TITLE: 里氏替换原则(Liskov Substitution Principle)
** 定义：两种都可以，第一种是正式定义
1. 如果对每一个类型为S的对象o1，都有类型为T的对象o2，使得以T定义的所有程序P在所有的对象o1都代换成o2时，
   程序P的行为没有发生变化，那么类型S是类型T的子类型。
2. 所有引用基类的地方必须能透明地使用其子类的对象。
** 定义中的含义
*** 子类必须完全实现父类的方法
在类中调用其他类时五笔要使用父类或接口，如果不能使用父类或接口，则说明类的设计违背了LSP原则。
*** 子类可以有自己的个性
LSP原则中子类可以出现在父类出现的地方，但是在子类出现的地方，父类未必就可以胜任。
子类可以由自己的行为和属性。
*** 覆盖或实现父类的方法时输入参数可以被放大
子类中方法的前置条件必须与超类中被覆写的方法的前置条件相同或者更宽松。
1. 覆盖时，子类方法需要跟父类方法有相同形参列表，此时输入参数范围跟父类相同
2. 重载时，子类方法形参列表与父类不同，但是为了满足lsp原则中引用基类的地方必须透明的引用子类，此时，
   必须要求子类的输入参数范围比父类的大，这样，替换后，输入相同的参数(满足父类中方法形参的范围)时，
   由于匹配父类的参数范围，会调用父类的方法，而不调用子类的方法。

子类中方法的前置条件必须与超类中被覆写的前置条件相同或更宽松。
*** 覆写或实现父类的方法时输出结果可以被缩小
1. 覆写，父类和子类同名方法输入参数相同，子类返回值范围小于等于父类的返回值范围，这是覆写的要求
2. 重载，子类的输入参数会宽于或等于父类的输入参数，也就是说这个重载的方法在不会被调用到。实际上
   调用的方法就是父类的方法，此时相等。
** 最佳实践
尽量避免子类的“个性”


